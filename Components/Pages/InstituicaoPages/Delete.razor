@page "/instituicaos/delete"
@inject BlazorApp1.Data.AppDbContext DB
@using BlazorApp1.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Instituicao</h4>
    <hr />
    @if (instituicao is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Nome</dt>
            <dd class="col-sm-10">@instituicao.Nome</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Endereco</dt>
            <dd class="col-sm-10">@instituicao.Endereco</dd>
        </dl>
        <EditForm method="post" Model="instituicao" OnValidSubmit="DeleteInstituicao" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(instituicao is null)">Delete</button> |
            <a href="/instituicaos">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Instituicao? instituicao;

    [SupplyParameterFromQuery]
    public int InstituicaoID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        instituicao = await DB.Instituicoes.FirstOrDefaultAsync(m => m.InstituicaoID == InstituicaoID);

        if (instituicao is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteInstituicao()
    {
        DB.Instituicoes.Remove(instituicao!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/instituicaos");
    }
}
